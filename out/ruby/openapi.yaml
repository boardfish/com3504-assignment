openapi: 3.0.2
info:
  contact:
    email: sgfish1@sheffield.ac.uk
  description: |
    This specification guides the creation of the endpoints necessary for this
    group's implementation of the COM3504 assignment.
  title: COM3504 Assignment
  version: 1.0.0
servers:
- url: /
tags:
- description: List and like stories on the site
  name: stories
paths:
  /stories:
    get:
      description: Returns all stories
      operationId: getStories
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryArray'
          description: successful operation
      summary: Get all stories
      tags:
      - stories
    post:
      operationId: addStory
      requestBody:
        $ref: '#/components/requestBodies/Story'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: Created
        "400":
          description: Invalid input
      summary: Create a story
      tags:
      - stories
  /stories/{storyId}:
    get:
      description: Returns a single story
      operationId: getStoryById
      parameters:
      - description: ID of story to return
        explode: false
        in: path
        name: storyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: Story not found
      summary: Find story by ID
      tags:
      - stories
  /stories/{storyId}/rate/{vote}:
    post:
      description: Creates a like for a story
      operationId: likeStory
      parameters:
      - description: ID of story to like
        explode: false
        in: path
        name: storyId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Rating to give to story
        explode: false
        in: path
        name: vote
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: successful operation
        "400":
          description: Invalid ID or rating supplied
        "404":
          description: Story not found
      summary: Like a story
      tags:
      - stories
  /users/{userId}/stories:
    get:
      description: Returns stories a user has created
      operationId: getUserStories
      parameters:
      - description: ID of user whose stories should be returned
        explode: false
        in: path
        name: userId
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryArray'
          description: successful operation
        "400":
          description: Invalid ID supplied
        "404":
          description: User not found
      summary: Find a user's stories
      tags:
      - stories
components:
  requestBodies:
    Story:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Story'
      description: story object for listing
      required: true
  schemas:
    Story:
      example:
        storyId: 0
        text: text
        userId: 6
        likes:
        - storyId: 1
          vote: 5
        - storyId: 1
          vote: 5
      properties:
        storyId:
          format: int64
          type: integer
        userId:
          format: int64
          type: integer
        text:
          description: Post content
          type: string
        likes:
          items:
            $ref: '#/components/schemas/Like'
          type: array
      type: object
    StoryArray:
      description: List of story object
      items:
        $ref: '#/components/schemas/Story'
      type: array
    Like:
      example:
        storyId: 1
        vote: 5
      properties:
        storyId:
          format: int64
          type: integer
        vote:
          format: int64
          type: integer
      type: object
